name: FREE FIRE RIPPER

on:
  workflow_dispatch:
    inputs:
      code:
        description: Paste Chrome Remote Desktop Authentication Code
        required: true

jobs:
  build:
    name: Free Fire Ripper Lab Running
    runs-on: windows-latest
    timeout-minutes: 43800

    steps:
    - name: Disable Firewall Profiles
      run: |
        try {
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
        } catch {
          Write-Host "Failed to disable firewall. Continuing..."
        }

    - name: Install Necessary Packages
      run: |
        function Install-PackageWithRetry {
            param ([string]$packageName)
            $maxRetries = 3
            $retryCount = 0
            while ($retryCount -lt $maxRetries) {
                try {
                    choco install $packageName -y --ignore-checksums
                    return
                } catch {
                    Write-Host "Retrying $packageName install ($($retryCount+1)/$maxRetries)"
                    Start-Sleep -Seconds 10
                    $retryCount++
                }
            }
            throw "$packageName failed to install via Chocolatey after multiple attempts."
        }
        Install-PackageWithRetry -packageName "chrome-remote-desktop-host"
        Install-PackageWithRetry -packageName "googlechrome"

    - name: Download and Extract Free Fire Ripper
      continue-on-error: true
      run: |
        cd C:\Users\$Env:USERNAME\Documents
        try {
          Invoke-WebRequest -Uri "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download" -OutFile ffripper.zip
          7z x ffripper.zip -y
        } catch {
          Write-Host "Download or extraction failed."
          exit 1
        }

    - name: Start Chrome Remote Desktop
      run: |
        $authCode = "${{ inputs.code }}"
        $pin = "123456" # Set a 6-digit or more PIN
        $redirectUrl = "https://remotedesktop.google.com/"

        $remotingPaths = @(
            "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe",
            "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        )

        # Find the executable path
        foreach ($path in $remotingPaths) {
            if (Test-Path $path) {
                & $path --code=$authCode --redirect-url=$redirectUrl --pin=$pin
                exit $LASTEXITCODE
            }
        }

        Write-Host "Error: remoting_start_host.exe not found. Make sure Chrome Remote Desktop is installed."
        exit 1

    - name: Create Symbolic Links
      run: |
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Free Fire.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Ninjaripper.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Noesis.lnk"

    - name: Set Desktop Wallpaper
      run: |
        $wallpaperPath = "C:\Users\$Env:USERNAME\Documents\wallpaper.jpg"
        $imageUrl = "https://i.ibb.co/7QBjY1q/20241214-020008.jpg"

        # Download the wallpaper
        Invoke-WebRequest -Uri $imageUrl -OutFile $wallpaperPath

        # Set the wallpaper using the registry
        Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name Wallpaper -Value $wallpaperPath

        # Refresh the desktop to apply the wallpaper
        RUNDLL32.EXE USER32.DLL,UpdatePerUserSystemParameters

    - name: Start Remote Desktop Session
      continue-on-error: true
      run: |
        Write-Host "Connecting to VM with Remote Desktop"
        ${{ inputs.code }} --pin=123456

    - name: Keep Connection Active
      run: |
        $i = 43800
        do {
            Write-Host $i
            Start-Sleep 60
            $i--
        } while ($i -gt 0)
